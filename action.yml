name: sync-download
author: gendloop
description: 'sync-download'
inputs:
# Required
  token:
    description: 'Personal token'
    required: true
    default: ${{ github.token }}

runs:
  using: 'composite'
  steps:
    - name: checkout-curr-repo
      uses: actions/checkout@v3
      with:
        path: ./Temp
        token: ${{ inputs.token }}

    - name: checkout-downloader
      uses: actions/checkout@v3
      env:
        downloader_path: './TempTools'
      with:
        repository: 'gendloop/Tools'
        path: ${{ env.downloader_path }}
        ref: 'main'
        token: ${{ inputs.token }}

    # - name: find-bash.exe
    #   shell: cmd
    #   run: |
    #     where bash

    # - name: add-path-to-environment-variable
    #   shell: bash
    #   run: |
    #     if [[ ${RUNNER_OS} == "windows-latest" ]]
    #     then
    #       echo "PATH=\${PATH}:/c/Program Files/Git/bin" >> $GITHUB_ENV
    #     fi
    - name: install git bash
      shell: pwsh
      run: |
        # sudo apt-get update
        sudo apt-get install -y git bash

        # git config --global core.autocrlf false
        # git config --global core.eol lf
        # git config --global credential.helper 'cache --timeout=3600'

    - name: sync-downloaded-files
      shell: pwsh
      working-directory: ${{ github.workspace }}
      env:
        downloader_path: './TempTools'
      run: |
        ${{ env.downloader_path }}/Common/DownloadFileFromRepo/downloadFilesFromRepo.ps1 ./Temp/scripts

    - name: get-time
      shell: bash
      run: |
        echo "CURRENT_TIME=$(date -d '+8 hours' +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo $CURRENT_TIME

    - name: record-run-time
      shell: bash
      if: ${{ github.actor == 'gendloop' }}
      working-directory: ${{ github.workspace }}/Temp
      run: |
        file="sync_log.md"
        if [ -f $file ]; then
          echo "$file already exists";
          file_size=$(du -m $file | cut -f1)
          if [ $file_size -gt 1 ]; then
            total_lines=$(wc -l < $file)
            half_lines=$((total_lines/2+1))
            sed -i "${half_lines},${total_lines}d" $file
            echo "Deleted half of file: $file"
          fi
        else
          echo "" > $file;
          echo "create new file: $file";
        fi
        sed -i "1s/^/$(echo "${CURRENT_TIME}: run workflow " | sed 's/\//\\\//g')\`${{ github.workflow }}\`\n\n/" $file

    - name: git-push
      uses: gendloop/git-push@main
      with:
        token: ${{ github.token }}
        commit: "chore: sync-downloaded-files"
        workspace: ${{ github.workspace }}/Temp
